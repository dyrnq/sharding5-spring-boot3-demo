mode:
  type: Standalone
  repository:
    type: JDBC


dataSources:
  ds_420100:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3380/db_420100?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
  ds_420200:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3380/db_420200?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456


rules:
  - !SHARDING
    tables:
      t_user:
        actualDataNodes: ds_${[420100,420200]}.t_user
#        actualDataNodes: ds_${[420100,420200]}.t_user
#        databaseStrategy:
#          standard:
#            shardingColumn: city_code
#            shardingAlgorithmName: database_city
      t_order:
        actualDataNodes: ds_${[420100,420200]}.t_order_2024${(7..8).collect{t ->t.toString().padLeft(2,'0')}}
        tableStrategy:
          standard:
            shardingColumn: create_time
            shardingAlgorithmName: create_time_inline

    defaultDatabaseStrategy:
      standard:
        shardingColumn: city_code
        shardingAlgorithmName: database_city
    bindingTables:
      - t_order,t_order

    shardingAlgorithms:
      database_city:
        type: CLASS_BASED
        props:
          strategy: standard
          algorithmClassName: com.company.config.algorithm.CityShardingAlgorithm
      create_time_inline:
        type: CLASS_BASED
        props:
          strategy: standard
          algorithmClassName: com.company.config.algorithm.CreateTimeShardingAlgorithm
props:
  sql-show: true